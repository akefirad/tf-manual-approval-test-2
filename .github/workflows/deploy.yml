name: Deploy Terraform

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    # concurrency: FIXME: setup concurrency!!!
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terafform
        uses: hashicorp/setup-terraform@v3

      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

    #   - name: Synthetize Terraform
    #     run: npm run cdktf plan

    #   - name: Testing terraform
    #     run: |
    #       script -c 'docker run -e TF_LOG=trace -it -v $(pwd)/main.tf:/app/main.tf --entrypoint /bin/sh hashicorp/terraform -c "terraform -chdir=/app init && terraform -chdir=/app apply"' /dev/null

      - name: Run deployment script
        uses: actions/github-script@v7
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        with:
          script: |
            const input = { 
              //command: `script -c "docker run -it -v $(pwd)/main.tf:/app/main.tf --entrypoint /bin/sh hashicorp/terraform -c 'terraform -chdir=/app init && terraform -chdir=/app apply'" /dev/null`,
              command: "script",
              args: ["-c", `"docker run -it -v $(pwd)/main.tf:/app/main.tf --entrypoint /bin/sh hashicorp/terraform -c 'terraform -chdir=/app init && terraform -chdir=/app apply'"`],
              //command: "script",
              //args:["-c", '"terraform init && terraform apply"'],
            };
            const script = require('.github/scripts/remote-exec.cjs');
            script({ input });
